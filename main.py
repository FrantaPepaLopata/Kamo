import nextcord
import random
import time
import json
import asyncio
import os
import aiofiles
import datetime
from io import BytesIO
from PIL import Image, ImageFont, ImageDraw, ImageFilter
from nextcord.utils import get
from nextcord.ext import commands, tasks
from itertools import cycle

bot_name = "K√°mo"
wedry_server_id = 736006656101449821
intents = nextcord.Intents().all()
client = commands.Bot(command_prefix="$", intents=intents)
client.remove_command("help")
client.warnings = {}
bot_id = 691636597439070268
level = ["Vƒõrn√Ω n√°sledovn√≠k", "No Lifer z wishe", "No Lifer", "Ultim√°tn√≠ No Lifer"]
levelnum = [5, 15, 30, 50]

@tasks.loop(seconds=20)
async def status_swap():
	await client.change_presence(activity=nextcord.Game(next(status)))

status = cycle([
	'Sleduj Wedryho!',
	'$help'
])
  
@client.event
async def on_ready():
	print('P≈ôihl√°sili jsme se jako {0.user}'.format(client))
	status_swap.start()
	client.add_view(RoleView())
	client.add_view(PronounsView())
	for guild in client.guilds:
		client.warnings[guild.id] = {}
        
		async with aiofiles.open(f"{guild.id}.txt", mode="a") as temp:
			pass

		async with aiofiles.open(f"{guild.id}.txt", mode="r") as file:
			lines = await file.readlines()

			for line in lines:
				data = line.split(" ")
				member_id = int(data[0])
				admin_id = int(data[1])
				warn_id = int(data[2])
				reason = " ".join(data[3:]).strip("\n")

				try:
					client.warnings[guild.id][member_id][0] += 1
					client.warnings[guild.id][member_id][1].append((admin_id, warn_id, reason))
					
				except KeyError:
					client.warnings[guild.id][member_id] = [1, [(admin_id, warn_id, reason)]]

@client.event
async def on_guild_join(guild):
    client.warnings[guild.id] = {}
    
@client.event
async def on_member_join(member):
	with open('users.json', 'r') as f:
		users = json.load(f)
        
	await update_data(users, member)
    
	with open('users.json', 'w') as f:
		json.dump(users, f, indent=4)
        
@client.event
async def on_message(message):
	if message.author.bot == False:
		with open('users.json', 'r') as f:
			users = json.load(f)
            
		user = message.author
		await update_data(users, user)
		await add_experience(users, user, random.randint(10, 20))
		await level_up(users, user, message)
        
		with open('users.json', 'w') as f:
			json.dump(users, f, indent=4)
            
	await client.process_commands(message)

@client.event
async def on_member_join(member):
	responses = [f"V√≠tej {member.mention}!", f"P≈ôipojil se k n√°m {member.mention} a nese se sebou nohu domorodce!", f"U≈æij si to tady {member.mention}", f"Na≈°e arm√°da otrok≈Ø se ka≈æd√Ωm dnem rozr≈Øst√°! Dnes se do n√≠ p≈ôipojil/a {member.mention}", f"Douf√°m, ≈æe nese≈° j√≠dlo {member.mention}..."]
	await client.get_channel(857306749471555594).send(random.choice(responses))
	try:
		embed=nextcord.Embed(title="V√≠tej na Wedryho serveru!", description=f"Zde je p√°r vƒõc√≠, co by jsi mƒõl udƒõlat jako prvn√≠.", color=nextcord.Color.purple())
		embed.set_footer(text='Napi≈° $help v kan√°lu pro p≈ô√≠kazy, aby jsi zjistil je≈°tƒõ v√≠c.')
		embed.add_field(name='1. P√°r nejd≈Øle≈æitƒõj≈°√≠ch vƒõc√≠', value="V <#736008766364844092> jsou pravidla, vysvƒõtlen√≠ rol√≠, atd.", inline=False)
		embed.add_field(name='2. Dej subscribe Wedrymu', value='To nikdy neu≈°kod√≠! **[Wedryho kan√°l](https://www.youtube.com/user/WedryLP "Na co je≈°tƒõ ƒçek√°≈°?")**')
		embed.add_field(name='3. P≈ôidej si p√°r rol√≠', value="V <#736021059005841530> jich p√°r najde≈°.", inline=False)
		embed.add_field(name='4. Pod√≠vej se na boty', value="V <#838418809337282582> je vysvƒõtlen√≠ jednotliv√Ωch bot≈Ø.", inline=False)
		embed.add_field(name='A hlavnƒõ si to tu u≈æij!', value="A≈æ na obƒçasnou vyj√≠mku tu jsou sam√≠ zaj√≠mav√≠ lid√© :grin:", inline=False)
		embed.set_image(url='https://cdn.discordapp.com/attachments/807343811281944659/860423666432213022/welcome.png')
		await member.send(embed=embed)
	except nextcord.HTTPException:
		return
    
@client.event
async def on_member_remove(member):
	responses = [f"**{member.name}** opustil/a server", f"**{member.name}** se rozpadl/a", f"**{member.name}** u≈æ nen√≠ nolifer", f"A na≈°e arm√°da je zas o nƒõco men≈°√≠... **{member.name}**", f"**{member.name}** byl/a stejnƒõ sus", f"Spain bez S... **{member.name}**", f"Je n√°m l√≠to, ≈æe se s tebou mus√≠me louƒçit **{member.name}**", f"Na≈°e poƒçty klesaj√≠ **{member.name}**", f"**{member.name}** ≈°el pro ml√≠ko"]
	await client.get_channel(857306749471555594).send(random.choice(responses))
    
class PronounsDropdown(nextcord.ui.Select):
	def __init__(self):
		options = [
			nextcord.SelectOption(label="Nic", description="Nechci uv√°dƒõt", default=True),
			nextcord.SelectOption(label="She/her", value=889219844166254623, description="Oslovov√°n√≠ v ≈æensk√©m rodƒõ"),
			nextcord.SelectOption(label="He/him", value=889220638030569554, description="Oslovov√°n√≠ v mu≈æsk√©m rodƒõ"),
			nextcord.SelectOption(label="They/them", value=889220669093597204, description="Oslovov√°n√≠ v mno≈æn√©m rodƒõ"),
			nextcord.SelectOption(label="They/she", value=889220803424579624, description="Oslovov√°n√≠ v mno≈æn√©m a ≈æensk√©m rodƒõ"),
			nextcord.SelectOption(label="She/they", value=889220717554573323, description="Oslovov√°n√≠ v ≈æensk√©m a mno≈æn√©m rodƒõ"),
			nextcord.SelectOption(label="They/he", value=889220918176538744, description="Oslovov√°n√≠ v mno≈æn√©m a mu≈æsk√©m rodƒõ"),
			nextcord.SelectOption(label="He/they", value=889220969388965969, description="Oslovov√°n√≠ v mu≈æsk√©m a mno≈æn√©m rodƒõ"),
			nextcord.SelectOption(label="She/he", value=889221030537732106, description="Oslovov√°n√≠ v ≈æensk√©m a mu≈æsk√©m rodƒõ"),
			nextcord.SelectOption(label="He/she", value=889221035042410578, description="Oslovov√°n√≠ v mu≈æsk√©m a ≈æensk√©m rodƒõ"),
			nextcord.SelectOption(label="She/they/he", value=889221040482435142, description="Oslovov√°n√≠ v ≈æensk√©m, mno≈æn√©m i mu≈æsk√©m rodƒõ"),
			nextcord.SelectOption(label="Xe/xem", value=889221044878061670, description="Oslovov√°n√≠ v neutr√°ln√≠m rodƒõ"),
			nextcord.SelectOption(label="Neopronouns", value=889221048921391104, description="Vlastn√≠ oslovov√°n√≠"),
		]
		super().__init__(custom_id=f"{bot_name}:{wedry_server_id}:PronounsDropdown", min_values=1, max_values=1, options=options, row=0)
        
	async def callback(self, interaction: nextcord.Interaction):
		PronounsIDs = [889219844166254623, 889220638030569554, 889220669093597204, 889220803424579624, 889220717554573323, 889220918176538744, 889220969388965969, 889221030537732106, 889221035042410578, 889221040482435142, 889221044878061670, 889221048921391104]
		user_roles = interaction.user.roles
		if self.values[0] == "Nic":
			for role in user_roles:
					if role.id in PronounsIDs:
						await interaction.user.remove_roles(role)
			await interaction.response.send_message("V≈°echny pronouns role, pokud jsi nƒõjak√© mƒõl, byly odebr√°ny.", ephemeral=True)
		else:
			PronounsID = int(self.values[0])
			PronounsRole = interaction.guild.get_role(PronounsID)
			assert isinstance(PronounsRole, nextcord.Role)
			if PronounsRole in user_roles:
				pass
			else:
				await interaction.user.add_roles(PronounsRole)
				await interaction.response.send_message(f"Pronoun {PronounsRole.name} byl/a/y p≈ôid√°n/a/y", ephemeral=True)
				for role in user_roles:
					if role.id in PronounsIDs and role.id != PronounsID:
						await interaction.user.remove_roles(role)
                        
class PronounsView(nextcord.ui.View):
	def __init__(self):
		super().__init__(timeout=None)
		self.add_item(PronounsDropdown())
    
class RoleView(nextcord.ui.View):
	def __init__(self):
		super().__init__(timeout=None)
        
	announcement_role = 887001695106768946
	youtube_notif_role = 887001862597935154
	view_name = "RoleView"
	async def role_add(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
		role_id = int(button.custom_id.split("-")[-1])
		role = interaction.guild.get_role(role_id)
		assert isinstance(role, nextcord.Role)
		if role in interaction.user.roles:
			await interaction.user.remove_roles(role)
			await interaction.response.send_message(f"Role {role.name} byla odebr√°na", ephemeral=True)
		else:
			await interaction.user.add_roles(role)
			await interaction.response.send_message(f"Dostal jsi roli {role.name}", ephemeral=True)
    
	@nextcord.ui.button(label='Ozn√°men√≠', emoji="üì¢", style=nextcord.ButtonStyle.primary, custom_id=f"{bot_name}{view_name}-{announcement_role}")
	async def announcement_button(self, button, interaction):
		await self.role_add(button, interaction)
        
	@nextcord.ui.button(label='Youtube ozn√°men√≠', emoji="‚ùó", style=nextcord.ButtonStyle.primary, custom_id=f"{bot_name}{view_name}-{youtube_notif_role}")
	async def yt_notif_button(self, button, interaction):
		await self.role_add(button, interaction)
        
@client.command()
async def pronouns(ctx):
	await ctx.channel.purge(limit=1)
	if (not ctx.author.guild_permissions.administrator):
		return await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
    
	embed=nextcord.Embed(title="Pronouns", description=f"Vyber si svoje pronouns", color=nextcord.Color.dark_blue())
	await ctx.channel.send(embed=embed, view=PronounsView())
    
@client.command()
async def roles(ctx):
	await ctx.channel.purge(limit=1)
	if (not ctx.author.guild_permissions.administrator):
		return await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
    
	embed=nextcord.Embed(title="Ozn√°men√≠", description=f"Klikni na tlaƒç√≠tko, aby jsi p≈ôidal nebo odebral oznamuj√≠c√≠ roli", color=nextcord.Color.dark_blue())
	await ctx.channel.send(embed=embed, view=RoleView())

@client.command(aliases=['8ball', '8b'])
async def eightball(ctx, *, question):
	responses = ["K√°√°√°mo.", "Ano k√°mo.", "K√°mo... Ne.", "Zeptej se pozdƒõji.", "Nev√≠m, mo≈æn√° to v√≠ Wedry.", "Rad≈°i dej subscribe Wedrymu.", "Zd√° se, ≈æe ano.", "To ti rad≈°i ne≈ôeknu.", "Stopy znaƒç√≠, ≈æe ne.", "To nem≈Ø≈æu vƒõdƒõt k√°mo.", "Nev√≠m, jsem l√≠n√Ω, jdi pryƒç.", "Nepoƒç√≠tej s t√≠m.", "Si to vygoogli ne?", "Rozhodnƒõ ano.", "mo≈æn√° ano, mo≈æn√° ne, kdo v√≠?", "*visible confusion*", "J√°... j√°... nev√≠m", "Wtf k√°mo, ne"]
	embed=nextcord.Embed(title=":8ball: ƒåas na ot√°zky :bangbang:", description=f"Ot√°zka: {question}", color=nextcord.Color.purple())
	embed.set_thumbnail(url='https://cdn.discordapp.com/attachments/807343811281944659/857306206291886170/question-mark-2123967_1920.jpg')
	embed.set_footer(text='Odpovƒõdƒõt, ƒçi neodpovƒõdƒõt, to je, oƒç tu bƒõ≈æ√≠')
	embed.add_field(name='Odpovƒõƒè:', value=random.choice(responses), inline=False)
	await ctx.channel.send(embed=embed)

def calculator(exp):
	o = exp.replace('√ó', '*')
	o = o.replace('√∑', '/')
	result = ''
	try:
		result=str(eval(o))
	except:
		result='Nastal error'
	return result

@client.command(aliases=['Calc', 'Calculator', 'calculator'])
async def calc(ctx):
	buttons = [
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='1', disabled=False, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='2', disabled=False, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='3', disabled=False, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='√ó', disabled=False, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='Exit', disabled=False, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='4', disabled=False, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='5', disabled=False, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='6', disabled=False, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='√∑', disabled=False, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='‚Üê', disabled=False, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='7', disabled=False, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='8', disabled=False, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='9', disabled=False, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='+', disabled=False, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='Clear', disabled=False, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='000', disabled=False, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='0', disabled=False, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='.', disabled=False, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='-', disabled=False, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.green, label='=', disabled=False, row=3)
	]
	DisButtons = [
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='1', disabled=True, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='2', disabled=True, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='3', disabled=True, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='√ó', disabled=True, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='Exit', disabled=True, row=0),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='4', disabled=True, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='5', disabled=True, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='6', disabled=True, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='√∑', disabled=True, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='‚Üê', disabled=True, row=1),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='7', disabled=True, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='8', disabled=True, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='9', disabled=True, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='+', disabled=True, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.red, label='Clear', disabled=True, row=2),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='000', disabled=True, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='0', disabled=True, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.grey, label='.', disabled=True, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.blurple, label='-', disabled=True, row=3),
			nextcord.ui.Button(style=nextcord.ButtonStyle.green, label='=', disabled=True, row=3)
	]
	m = await ctx.send(content = 'Naƒç√≠t√°n√≠ Kalkulaƒçky')
	expression = 'None'
	time = datetime.datetime.utcnow()
	view = nextcord.ui.View(timeout=None)
	view.add_item(buttons)
	delta = datetime.datetime.utcnow() + datetime.timedelta(seconds=30)
	e = nextcord.Embed(title=f'Kalkulaƒçka {ctx.author.name} | {ctx.author.id}', description = expression)
	e.set_footer(text='Zaƒçni svoji vlastn√≠ naps√°n√≠m $calc do chatu.')
	await m.edit(embed=e, view=view)
	while time < delta:
		time = datetime.datetime.utcnow()
		res = await client.wait_for("button_click")
		if res.author.id == int(res.message.embeds[0].title.split('|')[1]):
			expression = res.message.embeds[0].description
			if expression == 'None' or expression == 'Nastal error':
				expression = ''
			if res.component.label == 'Exit':
				return await res.respond(content='Kalkulaƒçka byla uzav≈ôena', type=7)
			elif res.component.label == '‚Üê':
				expression = expression[:-1]
			elif res.component.label == 'Clear':
				expression = None
			elif res.component.label == '=':
				expression = calculator(expression)
			else:
				expression += res.component.label
			f=nextcord.Embed(title=f'Kalkulaƒçka {res.author.name} | {res.author.id}', description=expression)
			f.set_footer(text='Zaƒçni svoji vlastn√≠ naps√°n√≠m $calc do chatu!')
			await res.respond(content='', embed=f, component=buttons, type=7)
			delta = datetime.datetime.utcnow() + datetime.timedelta(seconds=30)
		else:
			res.respond(content="Tohle nen√≠ tvoje kalkulaƒçka, m≈Ø≈æe≈° si zapnout svoji pou≈æit√≠m '$calc'")
	if time >= delta:
		return await ctx.send("Kalkulaƒçka byla pro neaktivitu uzav≈ôena.")
    
@client.command(aliases=['Show'])
async def show(ctx, member:nextcord.Member = None):
	await ctx.channel.purge(limit=1)
	await ctx.send("Poƒçkej chvilku...")
	if member == None:
		member = ctx.author

	show = Image.open("Show.jpg")
	draw = ImageDraw.Draw(show)
	data = BytesIO(await member.avatar.read())
	profile = Image.open(data)

	profile = profile.resize ((125, 125))

	show.paste(profile, (43, 437))

	show.save("show.png")
    
	await ctx.channel.purge(limit=1)
	await ctx.send(file = nextcord.File("show.png"))

	os.remove("show.png") 

@client.command(aliases=["Panakin"])
async def panakin(ctx, member:nextcord.Member=None):
	await ctx.channel.purge(limit=1)
	await ctx.send("Poƒçkej chvilku...")
    
	if member == None:
		member = ctx.author
        
	data = BytesIO(await member.avatar.read())
	f5 = Image.open(data)

	f5.thumbnail((9, 8))
	f5.save("pfp1.png")

	f5 = Image.open("pfp1.png").convert("RGB")

	mask = Image.new("L", f5.size, 0)
	draw = ImageDraw.Draw(mask)
	draw.ellipse((0, 0, f5.size[0], f5.size[1]), fill=255)
	mask = mask.filter(ImageFilter.GaussianBlur(0))

	result = f5.copy()
	result.putalpha(mask)

	result.save('pfp1.png')

	f5 = Image.open("pfp1.png")

	data = BytesIO(await member.avatar.read())
	f2 = Image.open(data)
	f1 = Image.open("Panakin.png")
	f2.thumbnail((54, 52))
	f2.save("pfp.png")

	f2 = Image.open("pfp.png").convert("RGB")

	mask = Image.new("L", f2.size, 0)
	draw = ImageDraw.Draw(mask)
	draw.ellipse((0, 0, f2.size[0], f2.size[1]), fill=255)
	mask = mask.filter(ImageFilter.GaussianBlur(0))

	result = f2.copy()
	result.putalpha(mask)

	result.save('pfp.png')

	f2 = Image.open("pfp.png")

	f3 = f1.copy()
	f3.paste(f2, (214, 414), f2)
	f3.paste(f2, (533, 409), f2)
	f3.paste(f5, (478, 133), f5)
	f3.paste(f5, (617, 131), f5)
	f3.save("panakin.png")
    
	await ctx.channel.purge(limit=1)
	await ctx.send(file = nextcord.File("panakin.png"))

	os.remove("pfp.png")
	os.remove("pfp1.png")
	os.remove("panakin.png")  
    
@client.command(aliases=["Snap", "fake", "Fake"])
async def snap(ctx, member:nextcord.Member=None, *, message="Bruh, who ghost pinged me?"):
	await ctx.channel.purge(limit=1)
	await ctx.send("Poƒçkej chvilku...")
	colour = {
		"time": (114, 118, 125),
		"content": (220, 221, 222)
	}

	size = {
		"title": 35,
		"time": 25
	}

	if member == None:
		member = ctx.author

	img = Image.new('RGB', (1000, 230), color = (54,57,63))
	titlefnt = ImageFont.truetype("discord.otf", size["title"])
	timefnt = ImageFont.truetype("discord.otf", size["time"])
	d = ImageDraw.Draw(img)
	if member.nick is None:
		txt = member.name
	else:
		txt = member.nick
	color = member.color.to_rgb()
	if color == (0, 0, 0):
		color = (255,255,255)
	d.text((180, 40), txt, font=titlefnt, fill=color)
	h, w = d.textsize(txt, font=titlefnt)
	time = datetime.datetime.utcnow().strftime("Today at %I:%M %p")
	d.text((180+h+20, 48), time, font=timefnt, fill=colour["time"])
	d.text((180, 60+w), message, font=titlefnt, fill=colour["content"])

	img.save('img.png')
	data = BytesIO(await member.avatar.read())
	f2 = Image.open(data)
	f1 = Image.open("img.png")
	f2.thumbnail((100, 110))
	f2.save("pfp.png")

	f2 = Image.open("pfp.png").convert("RGB")

	mask = Image.new("L", f2.size, 0)
	draw = ImageDraw.Draw(mask)
	draw.ellipse((0, 0, f2.size[0], f2.size[1]), fill=255)
	mask = mask.filter(ImageFilter.GaussianBlur(0))

	result = f2.copy()
	result.putalpha(mask)

	result.save('pfp.png')

	f2 = Image.open("pfp.png")

	f3 = f1.copy()
	f3.paste(f2, (40, 40), f2)
	f3.save("img.png")

	file = nextcord.File("img.png")
	await ctx.channel.purge(limit=1)
	await ctx.send(file=file)

	try:
		os.remove("pfp.gif")    
		os.remove("img.png")  
		await ctx.message.delete()
	except:
		os.remove("pfp.png")
		os.remove("img.png")  
		await ctx.message.delete()
        
@client.command(aliases=['Pat'])
async def pat(ctx, member:nextcord.Member = None):
	await ctx.channel.purge(limit=1)
	await ctx.send("Poƒçkej chvilku...")
	member2 = ctx.author

	if member == None:
		member = ctx.author
		member2 = ctx.guild.get_member(bot_id)
  
	pat = Image.open("Pat.jpg")
   
	draw = ImageDraw.Draw(pat)
	data = BytesIO(await member.avatar.read())
	profile = Image.open(data)
    
	profile = profile.resize((132, 132))
    
	pat.paste(profile, (655, 379))
    
	asset2 = member2.avatar.url_as(size = 128)
	data2 = BytesIO(await asset2.read())
	profile2 = Image.open(data2)

	profile2 = profile2.resize((173, 173))
   
	pat.paste(profile2, (303, 14))
   
	pat.save("pat.png")
   
	await ctx.channel.purge(limit=1)
	await ctx.send(file = nextcord.File("pat.png"))
	os.remove("pat.png")
    
@client.command(aliases=['Wanted'])
async def wanted(ctx, member:nextcord.Member = None, *, wanted_for=None):
	await ctx.channel.purge(limit=1)
	await ctx.send("Poƒçkej chvilku...")
	if member == None:
		member = ctx.author

	if wanted_for == None:
		wanted = Image.open("WantedEmpty.jpg")
		draw = ImageDraw.Draw(wanted)
		data = BytesIO(await member.avatar.read())
		profile = Image.open(data)

		profile = profile.resize ((400, 400))

		wanted.paste(profile, (150, 271))

		wanted.save("wantedpic.png")

		await ctx.channel.purge(limit=1)
		await ctx.send(file = nextcord.File("wantedpic.png"))

		os.remove("wantedpic.png")
		return

	wanted = Image.open("Wanted.jpg")
	font = ImageFont.truetype("Wanted font.ttf", 26)
   
	draw = ImageDraw.Draw(wanted)
	data = BytesIO(await member.avatar.read())
	profile = Image.open(data)

	profile = profile.resize((400, 400))
   
	wanted.paste(profile, (150, 271))
	draw.text((144, 737), wanted_for, (0, 0, 0), font=font)
   
	wanted.save("wantedpic.png")
   
	await ctx.channel.purge(limit=1)
	await ctx.send(file = nextcord.File("wantedpic.png"))
   
	os.remove("wantedpic.png")
    
@client.command(aliases=['Slowmode', 'Slow', 'slowmode'])
async def slow(ctx, *, time):
	if (not ctx.author.guild_permissions.manage_channels):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	await ctx.channel.purge(limit=1)
	try:
		time = int(time)
		if time == 0:
			embed=nextcord.Embed(description=f'Byl zru≈°en pomal√Ω re≈æim u {ctx.channel.mention}', color=nextcord.Color.from_rgb(255, 0, 255))
			await ctx.channel.send(embed=embed)
			await ctx.channel.edit(slowmode_delay = 0)
		elif time > 21600:
			embed=nextcord.Embed(description='Nem≈Ø≈æe≈° nastavit pomal√Ω re≈æim na v√≠c jak __6__ hodin (21600 vte≈ôin)', color=nextcord.Color.from_rgb(255, 0, 0))
			return await ctx.channel.send(embed=embed)
		else:
			await ctx.channel.edit(slowmode_delay = time)
			embed=nextcord.Embed(description=f'Pomal√Ω re≈æim byl nastaven u {ctx.channel.mention} na {time} vte≈ôin.', color=nextcord.Color.from_rgb(255, 0, 255))
			await ctx.channel.send(embed=embed)
	except:
		embed=nextcord.Embed(title='Error', description="Nƒõco se pokazilo, spr√°vn√© pou≈æit√≠ p≈ô√≠kazu je __$slowmode (ƒças)__, p≈ôiƒçem≈æ ƒças je ve vte≈ôin√°ch.", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)

@client.command(aliases=['k', 'Yeet', 'yeet'])
async def kick(ctx, member:nextcord.Member, *, reason="D≈Øvod nebyl uveden"):
	if (not ctx.author.guild_permissions.kick_members):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	await ctx.channel.purge(limit=1)
	embed=nextcord.Embed(title=f'{member.name} byl vyhozen!', description=f'**D≈Øvod:** ' + reason, color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"Byl jsi vyhozen z **{guild.name}** z d≈Øvodu: __{reason}__")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')
	await member.kick(reason=reason)
    
@client.command(aliases=['Infractions', 'bonked', 'Bonked'])
async def infractions(ctx, member:nextcord.Member=None):
	if (not ctx.author.guild_permissions.ban_members):
		return await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
	await ctx.channel.purge(limit=1)
	
	if member is None:
		member = ctx.author

	try:
		count = client.warnings[ctx.guild.id][member.id][0]
		embed=nextcord.Embed(title=f"{member.name} m√° {count} varov√°n√≠", description="", color=nextcord.Color.from_rgb(255, 0, 255))
		i = 1
		for admin_id, warn_id, reason in client.warnings[ctx.guild.id][member.id][1]:
			admin = ctx.guild.get_member(admin_id)
			embed.description += f"**Varov√°n√≠ {i}** dan√©: {admin.mention} z d≈Øvodu: *'{reason}'*.\n"
			i += 1

		await ctx.send(embed=embed)

	except:
		await ctx.send(f"{member.mention} nem√° ≈æ√°dn√© varov√°n√≠.")
        
@client.command(aliases=['bonk', 'Bonk', 'Warn'])
async def warn(ctx, member:nextcord.Member, *, reason="D≈Øvod nebyl uveden"):
	if (not ctx.author.guild_permissions.ban_members):
		return await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
	await ctx.channel.purge(limit=1)
	try:
		first_warning = False
		for admin_id, warn_id, reason in client.warnings[ctx.guild.id][member.id][1]:
			warn_id += 1
		client.warnings[ctx.guild.id][member.id][0] += 1
		client.warnings[ctx.guild.id][member.id][1].append((ctx.author.id, warn_id, reason))
        
	except KeyError:
		first_warning = True
		warn_id = 1
		client.warnings[ctx.guild.id][member.id] = [1, [(ctx.author.id, warn_id, reason)]]

	count = client.warnings[ctx.guild.id][member.id][0]

	async with aiofiles.open(f"{ctx.guild.id}.txt", mode="a") as file:
		await file.write(f"{member.id} {ctx.author.id} {warn_id} {reason}\n")

	embed=nextcord.Embed(description=f"{member.mention} byl varov√°n, celkem m√° __{count}__ varov√°n√≠", color=nextcord.Color.from_rgb(255, 0, 255))
	embed.add_field(name='Z d≈Øvodu:', value=reason, inline=False)
	embed.set_footer(text="BONK!")
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"Byl jsi varov√°n z d≈Øvodu: __{reason}__, nyn√≠ m√°≈° {count} varov√°n√≠, nezapome≈à, ≈æe za 3 a v√≠c je ban!")
	except:
		return

@client.command(aliases=['hammer', 'Hammer', 'Ban'])
async def ban(ctx, member:nextcord.Member, *, reason="D≈Øvod nebyl uveden"):
	if (not ctx.author.guild_permissions.ban_members):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	await ctx.channel.purge(limit=1)
	embed=nextcord.Embed(title=f'{member.name} byl zabanov√°n!', description=f'**__D≈Øvod:__** ' + reason, color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_footer(icon_url=ctx.author.avatar.url, text=f"{ctx.author.name} pou≈æil/a Ban Hammer")
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"Byl jsi zabanov√°n z **{guild.name}** z d≈Øvodu: __{reason}__")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')
	await member.ban(reason=reason)

@client.command(aliases=['forgive', 'Forgive', 'Unban'])
async def unban(ctx, *, member):
	if (not ctx.author.guild_permissions.ban_members):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	banned_users = await ctx.guild.bans()
	member_name, member_discriminator = member.split('#')

	for ban_entry in banned_users:
		user = ban_entry.user

	if(user.name, user.discriminator) == (member_name, member_discriminator):
		await ctx.channel.purge(limit=1)
		await ctx.guild.unban(user)
		embed=nextcord.Embed(title=f'Unban probƒõhl ≈Øspƒõ≈°nƒõ :ok_hand:!', color=nextcord.Color.from_rgb(255, 0, 255))
		await ctx.channel.send(embed=embed)
		return

@client.command(aliases=['clear', 'Clear', 'Delete', 'purge', 'Purge', 'del', 'Del'])
async def delete(ctx, amount=5):
	if (not ctx.author.guild_permissions.manage_messages):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	embed_amount = amount
	amount = amount+1
	if amount > 301:
		await ctx.send('Dr≈æme se pod 300 zpr√°vami ok?')
	else:
		await ctx.channel.purge(limit=amount)
		em=nextcord.Embed(title=f'Zpr√°vy byly vymaz√°ny.', color=nextcord.Color.from_rgb(255, 0, 255))
		em.set_footer(icon_url=ctx.author.avatar.url, text=f"{ctx.author.name} vymazal {embed_amount} zpr√°v/y z existence.")
		await ctx.channel.send(embed=em)
        
@client.command(aliases=['Shut', 'shut', 'Mute'])
async def mute(ctx, member:nextcord.Member, *, reason="D≈Øvod nebyl uveden"):
	if (not ctx.author.guild_permissions.manage_roles):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	guild = ctx.guild
	muteRole = nextcord.utils.get(guild.roles, name="Muted")
	await ctx.channel.purge(limit=1)
    
	if not muteRole:
		await ctx.send("Nena≈°el jsem Muted roli, tak v√°m jednu vytvo≈ô√≠m.")
		muteRole = await guild.create_role(name="Muted")
        
		for channel in guild.channels:
			await channel.set_permissions(muteRole, speak=False, send_messages=False)
	await member.add_roles(muteRole, reason=reason)
	embed=nextcord.Embed(title=f'**U≈æivatel byl ztlumen.**', description= f'{member} byl umlƒçen z d≈Øvodu: ' + reason, color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"Byl jsi ztlumen v **{guild.name}** z d≈Øvodu: __{reason}__")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')

@client.command(aliases=['Unshut', 'unshut', 'Unmute'])
async def unmute(ctx, member:nextcord.Member, *, reason=None):
	if (not ctx.author.guild_permissions.manage_roles):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	guild = ctx.guild
	muteRole = nextcord.utils.get(guild.roles, name="Muted")
    
	if not muteRole:
		await ctx.send("Nebyla nalezena Muted role!")
		return
    
@client.command(aliases=['Tempshut', 'tempshut', 'Tempmute', 'tmute', 'Tmute'])
async def tempmute(ctx, member:nextcord.Member, time = None, *, reason="D≈Øvod nebyl uveden"):
	if (not ctx.author.guild_permissions.manage_roles):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	if time == None:
		return await ctx.send("Na jak dlouho ho m√°m ztlumit? Spr√°vn√© pou≈æit√≠ je __$tempmute (ƒçlen) (ƒças) (d≈Øvod)__!")
	guild = ctx.guild
	muteRole = nextcord.utils.get(guild.roles, name="Muted")
	time_convert = {"s":1, "m":60, "h":3600, "d": 86400}
	mutetime = int(time[0]) * time_convert[time[-1]]
	await ctx.channel.purge(limit=1)
    
	if not muteRole:
		await ctx.send("Nena≈°el jsem Muted roli, tak v√°m jednu vytvo≈ô√≠m.")
		muteRole = await guild.create_role(name="Muted")
        
		for channel in guild.channels:
			await channel.set_permissions(muteRole, speak=False, send_messages=False)
	await member.add_roles(muteRole, reason=reason)
	embed=nextcord.Embed(title=f'**U≈æivatel byl doƒçasnƒõ ztlumen.**', description= f'{member} byl umlƒçen na {time} z d≈Øvodu: ' + reason, color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"Byl jsi doƒçasnƒõ ztlumen v **{guild.name}** z d≈Øvodu: __{reason}__")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')
	await asyncio.sleep(mutetime)

	await member.remove_roles(muteRole, reason=reason)
	embed=nextcord.Embed(title=f'**U≈æivatel byl unmutov√°n.**', color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"M≈Ø≈æe≈° zase mluvit v **{guild.name}**.")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')

	await ctx.channel.purge(limit=1)
	await member.remove_roles(muteRole, reason=reason)
	embed=nextcord.Embed(title=f'**U≈æivatel byl unmutov√°n.**', color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_thumbnail(url=member.avatar.url)
	await ctx.channel.send(embed=embed)
	try:
		await member.send(f"M≈Ø≈æe≈° zase mluvit v **{guild.name}**.")
	except nextcord.HTTPException:
		await ctx.send(f'Nebyl jsem schopen kontaktovat {member.name} v DMs.')
        
@client.command(aliases=['g', 'G', 'Giveaway'])
@commands.cooldown(1, 3600, commands.cooldowns.BucketType.user)
async def giveaway(ctx, time=None, *, prize=None):
	if (not ctx.author.guild_permissions.ban_members):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	if time == None:
		return await ctx.send("Jak dlouho m√° trvat? Spr√°vn√© pou≈æit√≠ je __$giveaway (ƒças) (cena)__")
	elif prize == None:
		return await ctx.send("Co se vyhr√°v√°? Spr√°vn√© pou≈æit√≠ je __$giveaway (ƒças) (cena)__")
	await ctx.channel.purge(limit=1)
	embed=nextcord.Embed(title=f'**Nov√° giveaway!**', description=f'V√≠tƒõz z√≠skane: **{prize}**', color=nextcord.Color.from_rgb(255, 0, 255))
	embed.set_footer(text=f'Giveaway konƒç√≠ za {time}')
	time_convert = {"s":1, "m":60, "h":3600, "d": 86400}
	gawtime = int(time[0]) * time_convert[time[-1]]
	gaw_msg = await ctx.send(embed=embed)

	await gaw_msg.add_reaction("üî•")
	await asyncio.sleep(gawtime)

	new_gaw_msg = await ctx.channel.fetch_message(gaw_msg.id)
    
	users = await new_gaw_msg.reactions[0].users().flatten()
	users.pop(users.index(client.user))
    
	winner = random.choice(users)
    
	await ctx.send(f':partying_face: {winner.mention} vyhr√°l __{prize}__ :tada:!!!')

@client.command(aliases=['Say'])
async def say(ctx, *, saymsg=None):
	if (not ctx.author.guild_permissions.administrator):
		await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')
		return
	if saymsg == None:
		return await ctx.send('Ale co m√°m ≈ô√≠ct? lol')
	await ctx.send(saymsg)

@client.command(aliases=['Embed', 'e', 'E'])
async def embed(ctx, color = None, *, text):

	if (not ctx.author.guild_permissions.manage_messages):
		return await ctx.send('K√°mo, na tohle nem√°≈° povolen√≠.')

	if text == None:
		return await ctx.send('Nem√°m co ≈ô√≠ct (doslova)')
	
	if color == "pink":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(255, 0, 255))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(255, 0, 255))

	elif color == "red":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(255, 0, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(255, 0, 0))

	elif color == "orange":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(255, 150, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(255, 150, 0))

	elif color == "white":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(255, 255, 255))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(255, 255, 255))

	elif color == "green":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(0, 175, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(0, 175, 0))

	elif color == "blue":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(0, 0, 255))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(0, 0, 255))

	elif color == "yellow":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(255, 255, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(255, 0, 255))

	elif color == "purple":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(199, 0, 222))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(199, 0, 222))

	elif color == "black":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(0, 0, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(0, 0, 0))

	elif color == "brown":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(159, 96, 0))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(159, 96, 0))

	elif color == "gray":
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek, color=nextcord.Color.from_rgb(135, 135, 135))

		except:
			embed=nextcord.Embed(description=text, color=nextcord.Color.from_rgb(135, 135, 135))

	else:
		try:
			titul, popisek = text.split(';')

			embed=nextcord.Embed(title=titul, description=popisek)

		except:
			embed=nextcord.Embed(description=text)

	await ctx.channel.send(embed=embed)

@client.command(aliases=['Ot√°zka', 'ot√°zka', 'Ask'])
async def ask(ctx, *, message=None): 
	if message == None:
		return await ctx.send("A na co se wedryho pt√°≈° huh?")
	await ctx.channel.purge(limit=1)
	await ctx.channel.send("Ot√°zka posl√°na!")
	embed=nextcord.Embed(title=f'{ctx.author.name} se pt√°:', description=f'{message}', color=nextcord.Color.purple())
	ask_msg = await client.get_channel(860505719656022046).send(embed=embed)
	await ask_msg.add_reaction("üëç")
	await ask_msg.add_reaction("üëé")
    
@client.command(aliases=['Suggestion', 's', 'S', 'N√°vrh', 'n√°vrh'])
@commands.cooldown(1, 3600, commands.cooldowns.BucketType.user)
async def suggestion(ctx, *, message=None): 
	if message == None:
		return await ctx.send("A ten n√°vrh? Pr√°zdn√© to tam poslat nem≈Ø≈æu lol")
	await ctx.channel.purge(limit=1)
	await ctx.channel.send("N√°vrh posl√°n!")
	embed=nextcord.Embed(title=f'Nov√Ω n√°vrh!', description=f'{ctx.author.mention} navrhuje: **{message}**', color=nextcord.Color.purple())
	ask_msg = await client.get_channel(860505660319858699).send(embed=embed)
	await ask_msg.add_reaction("üëç")
	await ask_msg.add_reaction("üëé")
    
@client.command(aliases=['Rank', 'level', 'Level'])
async def rank(ctx, user:nextcord.Member = None):
	if user == None:
		user = ctx.author
	with open('users.json', 'r') as f:
		users = json.load(f)

	try:
		xp = users[f'{user.id}']['experience']
		lvl = users[f'{user.id}']['level']
		lvl_end = users[f'{user.id}']['lvl_end']
		remain = lvl_end - xp
		check = lvl_end / 20
		if xp <= (1/2)*check:
			boxes = 0
		elif xp > (1/2)*check and xp < 2*check:
			boxes = 1
		elif xp >= 2*check and xp < 3*check:
			boxes = 2
		elif xp >= 3*check and xp < 4*check:
			boxes = 3
		elif xp >= 4*check and xp < 5*check:
			boxes = 4
		elif xp >= 5*check and xp < 6*check:
			boxes = 5
		elif xp >= 6*check and xp < 7*check:
			boxes = 6
		elif xp >= 7*check and xp < 8*check:
			boxes = 7
		elif xp >= 8*check and xp < 9*check:
			boxes = 8
		elif xp >= 9*check and xp < 10*check:
			boxes = 9
		elif xp >= 10*check and xp < 11*check:
			boxes = 10
		elif xp >= 11*check and xp < 12*check:
			boxes = 11
		elif xp >= 12*check and xp < 13*check:
			boxes = 12
		elif xp >= 13*check and xp < 14*check:
			boxes = 13
		elif xp >= 14*check and xp < 15*check:
			boxes = 14
		elif xp >= 15*check and xp < 16*check:
			boxes = 15
		elif xp >= 16*check and xp < 17*check:
			boxes = 16
		elif xp >= 17*check and xp < 18*check:
			boxes = 17
		elif xp >= 18*check and xp < 19*check:
			boxes = 18
		elif xp >= 19*check and xp < (19+(1/2))*check:
			boxes = 19
		elif xp >= (19+(1/2))*check:
			boxes = 20
		embed = nextcord.Embed(title=f"{user.name} statistiky √∫rovnƒõ", color=nextcord.Color.blue())
		embed.add_field(name="Level", value=f"{lvl}", inline=True)
		embed.add_field(name="Xp", value=f"{xp}", inline=True)
		embed.add_field(name="Do dal≈°√≠ho levelu zb√Ωv√°", value=f"{int(remain)} xp", inline=True)
		embed.add_field(name=f"Pr≈Øbƒõh", value=boxes * ":purple_square:" + (20-boxes) * ":white_large_square:", inline=False)
		embed.set_thumbnail(url=user.avatar.url)
		await ctx.channel.send(embed=embed)
	except KeyError:
		embed=nextcord.Embed(description=f"{user.name} je≈°tƒõ neposlal ≈æ√°dnou zpr√°vu.", color=nextcord.Color.blue())
		await ctx.channel.send(embed=embed)
	with open('users.json', 'w') as f:
		json.dump(users, f, indent=4)
        
@client.command(aliases=['sinfo', 'Sinfo', 'Server', 'serverinfo', 'ServerInfo', 'Serverinfo', 'serverInfo'])
async def server(ctx):
	role_count = len(ctx.guild.roles)
	list_of_bots = [bot.mention for bot in ctx.guild.bots]
    
	embed=nextcord.Embed(timestamp=ctx.message.created_at, color=nextcord.Color.blue())
	embed.add_field(name="Jm√©no", value=f"{ctx.guild.name}", inline=True)
	embed.add_field(name="ID", value=f"{ctx.guild.id}", inline=True)
	embed.add_field(name="Majitel", value=f"{ctx.guild.owner.mention}", inline=True)
	embed.add_field(name="Pravidla", value=f"{ctx.guild.rules_channel.mention}", inline=True)
	embed.add_field(name="Vytvo≈ôen dne", value=f"{ctx.guild.created_at}", inline=True)
	embed.add_field(name="Poƒçet ƒçlen≈Ø", value=f"{ctx.guild.member_count}", inline=True)
	embed.add_field(name="√örove≈à ovƒõ≈ôen√≠", value=f"{ctx.guild.verification_level}", inline=True)
	embed.add_field(name="Nejvy≈°≈°√≠ role", value=f"{ctx.guild.roles[-2]}", inline=True)
	embed.add_field(name="Poƒçet rol√≠", value=str(role_count), inline=True)
	embed.add_field(name="Boti", value=', '.join(list_of_bots), inline=True)
	embed.add_field(name="Emoji", value=f", ".join(ctx.guild.emojis), inline=True)
	embed.set_thumbnail(url=ctx.guild.icon.url)
	embed.set_author(name=f"{ctx.author.name}", icon_url=ctx.author.avatar.url)
    
	ctx.channel.send(embed=embed)
    
@client.command(aliases=['uinfo', 'Uinfo', 'User', 'userinfo', 'UserInfo', 'Userinfo', 'userInfo'])
async def user(ctx, member: nextcord.Member = None):
	if member == None:
		member = ctx.author
        
	role_count = len(member.roles)
	messages = 0
	async for message in channel.history(limit=100):
    	if message.author == member:
    	    messages += 1
	bot = member.bot
	if bot == True:
		bot = "Ano"
	else:
		bot = "Ne"
	nick = member.nick
	if nick == None:
		nick = "-"
    
	embed=nextcord.Embed(timestamp=ctx.message.created_at, color=nextcord.Color.blue())
	embed.add_field(name="Jm√©no", value=f"{member.name}{member.discriminator} {member.public_flags}", inline=True)
	embed.add_field(name="Zm√≠nka", value=f"{member.mention}", inline=True)
	embed.add_field(name="Nejvy≈°≈°√≠ role", value=f"{member.top_role.mention}", inline=True)
	embed.add_field(name="Poƒçet rol√≠", value=str(role_count), inline=True)
	embed.add_field(name=f"Poƒçet zpr√°v (z posledn√≠ch 100 v {ctx.channel.mention})", value=str(messages), inline=True)
	embed.add_field(name="P≈ôipojil se na discord", value=f"{member.created_at}", inline=True)
	embed.add_field(name=f"P≈ôipojil se na {ctx.guild.name}", value=f"{member.joined_at}", inline=True)
	embed.add_field(name="ID", value=f"{member.id}", inline=True)
	embed.add_field(name="Je bot", value=f"{bot}", inline=True)
	embed.set_thumbnail(url=ctx.member.avatar.url)
	embed.set_author(name=f"{ctx.author.name}", icon_url=ctx.author.avatar.url)
    
	ctx.channel.send(embed=embed)
        
@eightball.error
async def eightball_error(ctx, error):
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="**VOLE...**", description=f"Na co m√°m asi tak odpov√≠dat?", color=nextcord.Color.from_rgb(255, 0, 0))
		embed.set_thumbnail(url="https://cdn.nextcordapp.com/attachments/807343811281944659/860147182672674832/143120null.png")
		await ctx.channel.send(embed=embed)
        
@kick.error
async def kick_error(ctx, error):
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="**Vyhodit m√°m asi tebe ≈æe?**", description=f"Nebo rad≈°i p≈ô√≠≈°tƒõ nƒõkoho zmi≈à :wink:", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
	elif isinstance(error, commands.MemberNotFound):
		embed=nextcord.Embed(title="*Hold up*", description=f"Na serveru nikdo takov√Ω nen√≠.", color=nextcord.Color.from_rgb(255, 0, 0))
		embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/807343811281944659/860154377347792946/PngItem_1564426.png")
		await ctx.channel.send(embed=embed)
        
@ban.error
async def ban_error(ctx, error):
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="K√°mo...", description=f"P≈ô√≠≈°tƒõ nƒõkoho zmi≈à ok?", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
	elif isinstance(error, commands.MemberNotFound):
		embed=nextcord.Embed(title="*Hold up*", description=f"Na serveru nikdo takov√Ω nen√≠.", color=nextcord.Color.from_rgb(255, 0, 0))
		embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/807343811281944659/860154377347792946/PngItem_1564426.png")
		await ctx.channel.send(embed=embed)
        
@mute.error
async def mute_error(ctx, error):
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="K√°mo...", description=f"P≈ô√≠≈°tƒõ nƒõkoho zmi≈à ok?", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
	elif isinstance(error, commands.MemberNotFound):
		embed=nextcord.Embed(title="*Hold up*", description=f"Na serveru nikdo takov√Ω nen√≠.", color=nextcord.Color.from_rgb(255, 0, 0))
		embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/807343811281944659/860154377347792946/PngItem_1564426.png")
		await ctx.channel.send(embed=embed)
    
@unmute.error
async def unmute_error(ctx, error):
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="K√°mo...", description="P≈ô√≠≈°tƒõ nƒõkoho zmi≈à ok?", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
	elif isinstance(error, commands.MemberNotFound):
		embed=nextcord.Embed(title="*Hold up*", description="Na serveru nikdo takov√Ω nen√≠.", color=nextcord.Color.from_rgb(255, 0, 0))
		embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/807343811281944659/860154377347792946/PngItem_1564426.png")
		await ctx.channel.send(embed=embed)
    
@unban.error
async def unban_error(ctx, error):
	if isinstance(error, commands.CommandInvokeError):
		embed=nextcord.Embed(title="Kdo?", description="Napi≈° zabanovan√©ho ƒçlena, nebo napi≈° i tag toho ƒçlena, co chce≈° unbanovat.", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
	if isinstance(error, commands.MissingRequiredArgument):
		embed=nextcord.Embed(title="K√°mo...", description="P≈ô√≠≈°tƒõ nƒõkoho napi≈° ok?", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
        
@tempmute.error
async def tmute_error(ctx, error):
	if isinstance(error, commands.CommandInvokeError):
		await ctx.channel.purge(limit=1)
		embed=nextcord.Embed(title="≈†patn√© pou≈æit√≠ p≈ô√≠kazu", description="Spr√°vn√© pou≈æit√≠ je __$tempmute (ƒçlen) (ƒças) (d≈Øvod)__! z toho za ƒças mus√≠≈° doplnit p√≠smeno (s, m, h, d) *bez mezery*", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
        
@snap.error
async def snap_error(ctx, error):
	if isinstance(error, commands.MemberNotFound):
		embed=nextcord.Embed(title="≈†patn√© pou≈æit√≠ p≈ô√≠kazu", description="Spr√°vn√© pou≈æit√≠ je __$snap (ƒçlen) (text)__!", color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
        
@suggestion.error
async def cooldown_error(ctx, error):
	if isinstance(error, commands.CommandOnCooldown):
		embed=nextcord.Embed(title="Jen klid!", description='Tento p≈ô√≠kaz m≈Ø≈æe≈° pou≈æ√≠t znovu a≈æ za {:.0f}s'.format(error.retry_after), color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
        
@giveaway.error
async def cooldown_error(ctx, error):
	if isinstance(error, commands.CommandOnCooldown):
		embed=nextcord.Embed(title="Jen klid!", description='Tento p≈ô√≠kaz m≈Ø≈æe≈° pou≈æ√≠t znovu a≈æ za {:.0f}s'.format(error.retry_after), color=nextcord.Color.from_rgb(255, 0, 0))
		await ctx.channel.send(embed=embed)
              
async def update_data(users, user):
	if not f'{user.id}' in users:
		users[f'{user.id}'] = {}
		users[f'{user.id}']['experience'] = 0
		users[f'{user.id}']['level'] = 0
		users[f'{user.id}']['lvl_end'] = 100
        
async def add_experience(users, user, xp):
	users[f'{user.id}']['experience'] += xp
    
async def level_up(users, user, message):
	with open('levels.json', 'r') as g:
		levels = json.load(g)
	experience = users[f'{user.id}']['experience']
	lvl = users[f'{user.id}']['level']
	lvl_end = users[f'{user.id}']['lvl_end']
	if experience >= lvl_end:
		lvl += 1
		if lvl_end <= 300:
			next_lvl = lvl_end / 2
		elif lvl_end > 300 and lvl_end <= 600:
			next_lvl = lvl_end / 3
		elif lvl_end > 600 and lvl_end <= 1000:
			next_lvl = lvl_end / 4
		elif lvl_end > 1000 and lvl_end <= 3200:
			next_lvl = lvl_end / 5
		elif lvl_end > 3200 and lvl_end <= 4000:
			next_lvl = lvl_end / 6
		elif lvl_end > 4000 and lvl_end <= 5000:
			next_lvl = lvl_end / 7
		elif lvl_end > 5000 and lvl_end <= 7000:
			next_lvl = lvl_end / 8
		elif lvl_end > 7000 and lvl_end <= 10000:
			next_lvl = lvl_end / 9
		elif lvl_end > 10000:
			next_lvl = lvl_end / 10
		embed=nextcord.Embed(description=f"Gratuluji {user.mention} - Zv√Ω≈°il se ti level a to znamen√° ≈æe jsi bl√≠≈æ k Ultim√°tn√≠mu No Liferovi! Nynƒõj≈°√≠ level - **__{lvl}__**", color=nextcord.Color.from_rgb(255, 0, 255))
		embed.set_image(url=user.avatar.url)
		await client.get_channel(856894861793689610).send(embed=embed)
		users[f'{user.id}']['lvl_end'] = lvl_end + int(next_lvl)
		users[f'{user.id}']['level'] = lvl
		users[f'{user.id}']['experience'] = 0
		for i in range(len(level)):
			if lvl == levelnum[i]:
				await user.add_roles(nextcord.utils.get(user.guild.roles, name=level[i]))
				try:
					await user.remove_roles(nextcord.utils.get(user.guild.roles, name=level[i-1]))
				except:
					pass
    
client.run("")
